generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  firstname  String
  lastname   String
  email      String    @unique
  password   String
  role       Role      @relation(fields: [roleId], references: [id])
  roleId     Int
  projects   Project[] @relation("UserProjects")
  tasks      Task[]    @relation("UserTasks")
  comments   Comment[]
  logs       Log[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  details   Json
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  status      ProjectStatus
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  createdBy   User          @relation("UserProjects", fields: [createdById], references: [id])
  createdById String
  tasks       Task[]
}

enum ProjectStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  priority    TaskPriority
  status      TaskStatus
  due_date    DateTime?
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  project     Project      @relation(fields: [projectId], references: [id])
  projectId   Int
  comments    Comment[]
  assignedTo  User[]       @relation("UserTasks")
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  DONE
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
